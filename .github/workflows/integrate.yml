name: Docker Compose Actions Workflow
on:
  push:
    branches:
      - feature/pipeline

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Set Node environment to development
        run: export NODE_ENV=development

      - uses: actions/checkout@v2
      - name: Create .env file for backend
        run: |
          echo "ACCESS_KEY=${{ secrets.ACCESS_KEY }}" >> backend/.env
          echo "REFRESH_KEY=${{ secrets.REFRESH_KEY }}" >> backend/.env
          echo "ACCESS_TOKEN_EXPIRY=${{ secrets.ACCESS_TOKEN_EXPIRY }}" >> backend/.env
          echo "REFRESH_TOKEN_EXPIRY=${{ secrets.REFRESH_TOKEN_EXPIRY }}" >> backend/.env
          echo "ACCESS_COOKIE_EXPIRY=${{ secrets.ACCESS_COOKIE_EXPIRY }}" >> backend/.env
          echo "REFRESH_COOKIE_EXPIRY=${{ secrets.REFRESH_COOKIE_EXPIRY }}" >> backend/.env

      - name: Create .env file for database
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> db/.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> db/.env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> db/.env
          echo "PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}" >> db/.env
          echo "PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}" >> db/.env

      - name: Build application with docker compose
        run: docker-compose up -d

      # - name: List installed npm packages
      #   run: docker exec backend npm list --depth=0

      - name: Check for node_modules
        run: docker exec backend ls -la

      - name: Run unit tests for backend
        run: docker exec backend npm run test

      - name: Shutdown Docker Compose
        run: docker-compose down
